// Mocks generated by Mockito 5.4.5 from annotations
// in flora_mart/test/data/datasource_impl/guest_datasource_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;

import 'package:flora_mart/core/cache/shared_pref.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T1> extends _i1.SmartFake implements _i2.Future<T1> {
  _FakeFuture_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CacheHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheHelper extends _i1.Mock implements _i3.CacheHelper {
  MockCacheHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i2.Future<void>.value(),
            returnValueForMissingStub: _i2.Future<void>.value(),
          )
          as _i2.Future<void>);

  @override
  _i2.Future<bool> checkGuest() =>
      (super.noSuchMethod(
            Invocation.method(#checkGuest, []),
            returnValue: _i2.Future<bool>.value(false),
          )
          as _i2.Future<bool>);

  @override
  _i2.Future<bool> setData<T>(String? key, T? value) =>
      (super.noSuchMethod(
            Invocation.method(#setData, [key, value]),
            returnValue: _i2.Future<bool>.value(false),
          )
          as _i2.Future<bool>);

  @override
  _i2.Future<T> getData<T>(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getData, [key]),
            returnValue:
                _i4.ifNotNull(
                  _i4.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#getData, [key]),
                  ),
                  (T v) => _i2.Future<T>.value(v),
                ) ??
                _FakeFuture_0<T>(this, Invocation.method(#getData, [key])),
          )
          as _i2.Future<T>);

  @override
  _i2.Future<bool> removeData(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#removeData, [key]),
            returnValue: _i2.Future<bool>.value(false),
          )
          as _i2.Future<bool>);

  @override
  _i2.Future<bool> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i2.Future<bool>.value(false),
          )
          as _i2.Future<bool>);
}
