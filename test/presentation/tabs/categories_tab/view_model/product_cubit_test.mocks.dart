// Mocks generated by Mockito 5.4.5 from annotations
// in flora_mart/test/presentation/tabs/categories_tab/view_model/product_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flora_mart/core/api/api_result.dart' as _i5;
import 'package:flora_mart/data/model/products/Products.dart' as _i6;
import 'package:flora_mart/domain/repo_contract/get_all_products_repo.dart'
    as _i2;
import 'package:flora_mart/domain/usecase/get_all_products_usecase.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetAllProductsRepo_0 extends _i1.SmartFake
    implements _i2.GetAllProductsRepo {
  _FakeGetAllProductsRepo_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GetAllProductsUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllProductsUsecase extends _i1.Mock
    implements _i3.GetAllProductsUsecase {
  MockGetAllProductsUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetAllProductsRepo get getAllProductsRepo =>
      (super.noSuchMethod(
            Invocation.getter(#getAllProductsRepo),
            returnValue: _FakeGetAllProductsRepo_0(
              this,
              Invocation.getter(#getAllProductsRepo),
            ),
          )
          as _i2.GetAllProductsRepo);

  @override
  _i4.Future<_i5.ApiResult<List<_i6.Products>>> execute(
    String? typeId,
    String? type,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [typeId, type]),
            returnValue: _i4.Future<_i5.ApiResult<List<_i6.Products>>>.value(
              _i7.dummyValue<_i5.ApiResult<List<_i6.Products>>>(
                this,
                Invocation.method(#execute, [typeId, type]),
              ),
            ),
          )
          as _i4.Future<_i5.ApiResult<List<_i6.Products>>>);
}
