// Mocks generated by Mockito 5.4.5 from annotations
// in flora_mart/test/presentation/auth/view_model/cubit/categories_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flora_mart/core/api/api_result.dart' as _i5;
import 'package:flora_mart/domain/entity/categories_entity/all_categories_entity/categories_entity.dart'
    as _i6;
import 'package:flora_mart/domain/repo_contract/categories_repo.dart' as _i2;
import 'package:flora_mart/domain/usecase/categories_usecase.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCategoriesRepo_0 extends _i1.SmartFake
    implements _i2.CategoriesRepo {
  _FakeCategoriesRepo_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CategoriesUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoriesUsecase extends _i1.Mock implements _i3.CategoriesUsecase {
  MockCategoriesUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CategoriesRepo get categoriesRepo =>
      (super.noSuchMethod(
            Invocation.getter(#categoriesRepo),
            returnValue: _FakeCategoriesRepo_0(
              this,
              Invocation.getter(#categoriesRepo),
            ),
          )
          as _i2.CategoriesRepo);

  @override
  _i4.Future<_i5.ApiResult<List<_i6.CategoriesEntity>>> call({
    required String? id,
    required String? name,
    required num? productsCount,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#call, [], {
              #id: id,
              #name: name,
              #productsCount: productsCount,
            }),
            returnValue:
                _i4.Future<_i5.ApiResult<List<_i6.CategoriesEntity>>>.value(
                  _i7.dummyValue<_i5.ApiResult<List<_i6.CategoriesEntity>>>(
                    this,
                    Invocation.method(#call, [], {
                      #id: id,
                      #name: name,
                      #productsCount: productsCount,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i5.ApiResult<List<_i6.CategoriesEntity>>>);
}
